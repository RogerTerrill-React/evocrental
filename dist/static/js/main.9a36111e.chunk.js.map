{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","profile","react_default","a","createElement","className","react_router_dom","to","onClick","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","error","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","response","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9a36111e.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {signOut} from '../../store/actions/authActions';\r\n\r\n\r\nconst SignedInLinks = (props) => {\r\n  const {profile} = props;\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to='/create'>New Project</NavLink></li>\r\n      <li><a onClick={props.signOut}>Log Out</a></li>\r\n      <li><NavLink to='/' className='btn btn-floating pink lighten-1'>{profile.initials}</NavLink></li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = credentials => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: 'LOGIN_SUCCESS' });\r\n      })\r\n      .catch(error => {\r\n        dispatch({ type: 'LOGIN_ERROR', error });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = newUser => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then(response => {\r\n        return firestore\r\n          .collection('users')\r\n          .doc(response.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0]\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n      })\r\n      .catch(error => {\r\n        dispatch({ type: 'SIGNUP_ERROR', error });\r\n      });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">Signup</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">Login</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = props => {\r\n  const { auth, profile } = props;\r\n  // console.log(auth)\r\n  const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />;\r\n  return (\r\n    <div>\r\n      <nav className=\"nav-wrapper grey darken-3\">\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className=\"brand-logo\">\r\n            Rentell\r\n          </Link>\r\n          {links}\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from 'react'\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n  const {notifications} = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            {notifications && notifications.map(item=>{\n              return (\n                <li key={item.id}>\n                  <span className=\"pink-text\">{item.user} </span>\n                  <span>{item.content}</span>\n                  <div className=\"grey-text note-date\">\n                    {moment(item.time.toDate()).fromNow()}\n                  </div>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications;\n","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({project}) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>Post by {project.authorFirstName} {project.authorLastName}</p>\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className=\"project-list section\">\n      {projects &&\n        projects.map(project => {\n          return (\n            <Link to={'/project/' + project.id} key={project.id} >\n              <ProjectSummary project={project} />\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n  render() {\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\n  ]) // Syncs the state of redux with particular collection\n)(Dashboard);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport {Redirect} from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = props => {\n  const { project, auth } = props;\n  if (!auth.uid) return <Redirect to='/signin' />\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>\n              Posted by {project.authorFirstName} {project.authorLastName}\n            </div>\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state);\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: 'projects' }])\n)(ProjectDetails);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions'\nimport {Redirect} from 'react-router-dom';\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    // Console.log(this.state);\n    this.props.signIn(this.state);\n  };\n\n  render() {\n    const {authError, auth} = this.props;\n    if (auth.uid) return <Redirect to='/' />\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: creds => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authActions';\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: ''\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.signUp(this.state);\n  };\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: newUser => dispatch(signUp(newUser))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignUp);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/projectActions';\nimport { Redirect } from 'react-router-dom';\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    //console.log(this.state);\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  };\n\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Project Content</label>\n            <textarea\n              id=\"content\"\n              className=\"materialize-textarea\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: project => dispatch(createProject(project))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateProject);\n","export const createProject = project => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // make async call to database\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n\r\n    firestore\r\n      .collection('projects')\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date()\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: 'CREATE_PROJECT', project: project });\r\n      })\r\n      .catch(error => {\r\n        dispatch({ type: 'CREATE_PROJECT_ERROR', error });\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_ERROR':\r\n      console.log('login error');\r\n      return {\r\n        ...state,\r\n        authError: 'Login failed'\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success');\r\n      return state;\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success');\r\n      return{\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error')\r\n      return {\r\n        ...state,\r\n        authError: action.error.message\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    { id: '1', title: 'help me find peach', content: 'blah blah blah' },\r\n    { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\r\n    { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' }\r\n  ]\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT':\r\n      console.log('created project', action.project);\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error', action.error);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\n// Syncs firestore date with redux state\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n  apiKey: 'AIzaSyBv9k62Uu3FgQl2g1X7eBDim5faiVX3MDI',\r\n  authDomain: 'evocrentals.firebaseapp.com',\r\n  databaseURL: 'https://evocrentals.firebaseio.com',\r\n  projectId: 'evocrentals',\r\n  storageBucket: 'evocrentals.appspot.com',\r\n  messagingSenderId: '206838482278'\r\n};\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({})\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile:'users', attachAuthIsReady: true })\n  )\n);\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n});\n"],"sourceRoot":""}